53.Utility Types とConditional Typesをなぜ学ぶのか。

Utility Types 
tsの言語仕様が提供してくれている。特殊な型になる。
その特殊な型を体系的に学んでいく。その型がどのように作られているか学ぶ。
便利だから学ぶ

Conditional Types
参考演算子のような書き方を持ちながら条件分岐を型の定義に導入できる一つの文法
より動的な型を定義する事ができる。
これを知らないとUtility Typesがどのように定義されているか理解できないから。
便利な型、動的な型を定義するためには必ず必要な知識になる。

tsは型を動的にプログラムできるもの。Conditional Typesを理解する事でプログラムを理解できる。
型をプログラムする方法を学ぶ事ができる。
自身で専用の便利な型も設定する事ができる。

54.PartialとRequireed
ファイルを作って確認していく
Utility Types
echo 'export {}'  > src/partial-and-required.tsで実施していく
　
55.Mapped Types
PartialとRequireedというユーティリティを学ぶ以外にもっと学んでおくべき事。
echo 'export {};'  > src/mapped.ts

56.Readonly 
全てのプロパティがreadonlyになるというもの
ファイルを作ってやっていく
echo 'export {};'  > src/utility-types-readonly.tsで実施する。

57.Record型
ファイルを作ってやっていく
echo 'export {};'  > src/record.ts

58.ExcludeとExractとNonNullableについて
echo 'export {};'  > src/exclude-extract-nonnullable.tsで実施していく。

59.Conditional TypesとDistributive Conditional Typesについてマスターしよう
Excludeの型の定義を確認していく。
すでに実装されたコードを利用していく。
src/exclude-extract-nonnullable.ts src/exclude-extract-nonnullable-definition.ts

60. PickとOmit
ファイルを作成してやっていく

