30.functionキーワードによる関数定義
これからはtsの型を関数やクラスを使用して確認していく。
functionキーワードを中心に本定義で行う。
tsで気をつけるのは2点　引数と戻り値
それ以外はjsと同じ。
echo 'export {}'  > src/function.tsでファイルを作成して確認していく

31.無名関数(anonymous-function関数)による関数定義
関数はbmiを使用していく。
エディタを使用していく

32.アロー関数（Lambda式）による関数定義
arrowを使用した関数のアノテーションを学習する。 
echo 'export {}'  > src/arrow-functions.tsで実施

33,オプショナルなパラメータを定義しよう
tsの関数の定義の仕方、型の付け方は学習した
その関数の引数に、オプショナルなもの。省略可能なものをコード的にどう書いていくのかを見ていく。
echo 'export {}'  > src/optional-arguments.tsで作成していく。

34.デフォルトパラメータを設定使用
関数の引数に値を指定しなかった場合に関数側に初期値を設定させること。
echo 'export {}'  > src/default-parameters.tsでファイルを作成して実施する。

35.Restパラメーターを設定しよう
echo 'export {}'  > src/rest-paramerters.ts
でコードを交えて紹介していく。
デフォルトパラメータと同様、jsの機能である

36.オーバーロードをやってみよう。
tsに限ったものでなく一般的なプログラミングであるもの。
オーバーロードは、関数を定義するときに同じ名前でありながら、引数や戻り値が違うものを定義する事。
echo 'export {}'  > src/overloads.tsで実施

